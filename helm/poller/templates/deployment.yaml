apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "poller.fullname" . }}
  labels:
    {{- include "poller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "poller.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.deployment.type }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        {{- include "poller.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configmap.name }}-{{ .Release.Name }}
          env:
            - name: RDS_USER_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.rdscred.name }}-{{ .Release.Name }}
                  key: username
            - name: RDS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.rdscred.name }}-{{ .Release.Name }}
                  key: password
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/healthcheck
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /v1/healthcheck
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
            requests:
              memory: "250Mi"
              cpu: 250m
            limits:
              memory: "500Mi"
              cpu: 500m
      imagePullSecrets:
        - name: {{ .Values.secret.regcred.name }}-{{ .Release.Name }}